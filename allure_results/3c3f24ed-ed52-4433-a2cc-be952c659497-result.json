{"name": "Проверка совпадения id в ленте заказов и в истории заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x0000023274DD5640>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"65de0748-0e5c-41f9-8f2a-3c64aef12134\")>\n\n    @allure.title('Проверка совпадения id в ленте заказов и в истории заказов')\n    def test_find_order_in_list(self, driver):\n        pp = ProfilePage(driver)\n        ofp = OrderFeedPage(driver)\n        mp = MainPage(driver)\n    \n        pp.authorization()\n        mp.add_filling_to_order()\n        mp.click_order_button()\n        order_id = mp.get_order_id\n        mp.click_close_window_order()\n        pp.open_profile_page()\n        pp.open_history_page()\n>       order_id_history = pp.found_order_at_history(order_id)\n\ntests\\test_order_feed.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\profile_page.py:35: in found_order_at_history\n    elements = self.find_until_all_elements_located(PL.ORDERS_AT_HISTORY)\npages\\base_page.py:66: in find_until_all_elements_located\n    return WebDriverWait(self.driver, 20).until(EC.presence_of_all_elements_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"65de0748-0e5c-41f9-8f2a-3c64aef12134\")>, method = <function presence_of_all_elements_located.<locals>._predicate at 0x0000023274F48C10>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "Авторизация", "status": "passed", "start": 1717623869450, "stop": 1717623871116}, {"name": "Перетаскивание ингредиента", "status": "passed", "start": 1717623871116, "stop": 1717623871684}, {"name": "Нажатие на кнопку \"Оформить заказ\"", "status": "passed", "start": 1717623871684, "stop": 1717623871726}, {"name": "Закрытие окна после создания заказа", "status": "passed", "start": 1717623871726, "stop": 1717623872288}, {"name": "Открытие страницы", "status": "passed", "start": 1717623872288, "stop": 1717623872322}, {"name": "Открытие страницы \"История заказов\"", "status": "passed", "start": 1717623872322, "stop": 1717623872877}, {"name": "Проверка нахождение идентификатора заказа в истории", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\Alex\\PycharmProjects\\Diplom_3\\.venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Alex\\PycharmProjects\\Diplom_3\\pages\\profile_page.py\", line 35, in found_order_at_history\n    elements = self.find_until_all_elements_located(PL.ORDERS_AT_HISTORY)\n  File \"C:\\Users\\Alex\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 66, in find_until_all_elements_located\n    return WebDriverWait(self.driver, 20).until(EC.presence_of_all_elements_located(locator))\n  File \"C:\\Users\\Alex\\PycharmProjects\\Diplom_3\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "order_id", "value": "<bound method MainPage.get_order_id of <pages.main_page.MainPage object at 0x0000023274F20CD0>>"}], "start": 1717623872877, "stop": 1717623893015}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1717623869450, "stop": 1717623893056, "uuid": "58c0a590-0559-49db-b24e-0d42ee512f92", "historyId": "8a4b7e07ff720824ee2867c1b888916f", "testCaseId": "72267a88ac80509d3423065609acccc4", "fullName": "tests.test_order_feed.TestOrderFeed#test_find_order_in_list", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "DESKTOP-UR4AHC6"}, {"name": "thread", "value": "16276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}